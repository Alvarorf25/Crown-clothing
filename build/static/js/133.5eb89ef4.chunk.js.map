{"version":3,"file":"static/js/133.5eb89ef4.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","store/categories/category.selector.ts","components/product-card/product-card.styles.tsx","components/product-card/product-card.component.tsx","components/category-preview/category-preview.styles.tsx","components/category-preview/category-preview.component.tsx","routes/categories-preview/categories-preview.component.tsx","routes/category/category.styles.tsx","routes/category/category.component.tsx","routes/shop/shop.component.tsx","store/cart/cart.selector.ts","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { ButtonHTMLAttributes } from 'react';\n\nimport {BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner} from './button.styles';\n\nexport enum BUTTON_TYPE_CLASSES {\n    base = 'base',\n    google = 'google-sign-in',\n    inverted = 'inverted'\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton => (\n    {\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n    }[buttonType]\n);\n\nexport type ButtonProps = {    \n    buttonType?: BUTTON_TYPE_CLASSES;\n    isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button = ({ children, buttonType, isLoading, ...otherProps }: ButtonProps) => {\n    const CustomButton = getButton(buttonType);\n\n    return (\n        <CustomButton disabled={isLoading} {...otherProps}>\n            {isLoading ? <ButtonSpinner/> : children}\n        </CustomButton>\n    );    \n};\n\nexport default Button;","import styled from 'styled-components';\n\nimport { SpinnerContainer } from '../spinner/spinner.styles';\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Oswald';\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }  \n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }  \n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  } \n`;\n\nexport const ButtonSpinner = styled(SpinnerContainer)`\n  width: 30px;\n  height: 30px\n`;","import { createSelector } from \"reselect\";\n\nimport { RootState } from \"../store\";\n\nimport { CategoriesState } from \"./category.reducer\";\n\n\nconst selectCategoriesState = (state: RootState): CategoriesState => state.categories;\n\nexport const selectCategoryList = createSelector(\n    selectCategoriesState,\n    (categoriesState) => categoriesState.categoryList\n);\n\nexport const selectCategoriesMap = createSelector(\n    selectCategoryList,\n    (categoryList) => {\n        return Object.fromEntries(categoryList.map(({ title, items }) => ([title.toLowerCase(), items])))\n    }   \n);\n\nexport const selectCategoriesIsLoading = createSelector(\n    selectCategoriesState,\n    (categoriesState) => categoriesState.isLoading\n);","import styled from 'styled-components';\n\nexport const ProductCardContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 95%;\n    object-fit: cover;\n    margin-bottom: 5px;\n  }\n\n  button {\n    width: 80%;\n    opacity: 0.7;\n    position: absolute;\n    top: 255px;\n    display: none;\n\n    @media screen and (max-width: 800px) {\n      display: block;\n      opacity: 0.9;\n      min-width: unset;\n      padding: 0 10px;\n    }\n  }\n\n  &:hover {\n    img {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      img {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }  \n  }\n`;\n\nexport const Footer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const Name = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const Price = styled.span`\n  width: 10%;\n`;","import { FC } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\n\nimport { selectCartItems } from '../../store/cart/cart.selector';\nimport { addItemToCart } from '../../store/cart/cart.action';\nimport { CategoryItem } from '../../store/categories/category.types';\n\nimport {ProductCardContainer, Footer, Name, Price} from './product-card.styles'\n\ntype ProductCardProps = {\n    product: CategoryItem;\n};\n\n\nconst ProductCard: FC<ProductCardProps> = ({ product }) => {\n    const { imageUrl, name, price } = product;    \n    const dispatch = useDispatch();\n    const cartItems = useSelector(selectCartItems);\n\n    const addProductToCart = () => dispatch(addItemToCart(cartItems, product));\n\n    return (\n        <ProductCardContainer>\n            <img src={imageUrl} alt={`${name}`} />\n            <Footer>\n                <Name>{name}</Name>\n                <Price>${price}</Price>\n            </Footer>\n            <Button buttonType={BUTTON_TYPE_CLASSES.inverted} onClick={addProductToCart} >Add to cart</Button>\n        </ProductCardContainer>\n    )\n};\n\nexport default ProductCard; ","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CategoryPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  \n  @media screen and (max-width:800px) {\n    align-items: center;\n  }\n`;\n\nexport const Title = styled(Link)`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;  \n`;\n\nexport const Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 20px;\n\n  @media screen and (max-width:800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px\n  }\n`;","import { FC } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport ProductCard from '../product-card/product-card.component';\n\nimport {CategoryPreviewContainer, Title, Preview} from './category-preview.styles';\n\nimport { CategoryItem } from '../../store/categories/category.types';\n\ntype CategoryPreviewProps = {\n    title: string;\n    products: CategoryItem[];\n};\n\nconst CategoryPreview: FC<CategoryPreviewProps> = ({ title, products }) => {\n    return (\n        <CategoryPreviewContainer>\n            <h2>\n                <Title to={title}>{title.toUpperCase()}</Title>\n            </h2>\n            <Preview>\n                {\n                    products.filter((_, index: number) => index < 4).map(product => <ProductCard key={product.id} product={product} />)\n                }\n            </Preview>\n        </CategoryPreviewContainer>\n    );\n}\n\nexport default CategoryPreview;","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectCategoriesMap, selectCategoriesIsLoading } from \"../../store/categories/category.selector\";\n\nimport CategoryPreview from \"../../components/category-preview/category-preview.component\";\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst CategoriesPreview = () => {\n    const categoryListMap = useSelector(selectCategoriesMap);\n    const isLoading = useSelector(selectCategoriesIsLoading);\n\n    return (\n        <Fragment>\n            {    \n                isLoading ? (<Spinner />) :           \n                (\n                    Object.keys(categoryListMap).map((title) => {\n                    const products = categoryListMap[title];                    \n\n                    return (\n                        <CategoryPreview key={title} title={title} products={products} />\n                    )                    \n                    }) \n                )               \n            }                   \n        </Fragment>\n    )\n};\n\nexport default CategoriesPreview;","import styled from 'styled-components';\n\nexport const CategoryContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    column-gap: 20px;\n    row-gap: 50px;\n    \n`;\n\nexport const Title = styled.h2 `\n    font-size: 38px;\n    margin-bottom: 25px;\n    text-align: center;\n    \n`;","import { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ProductCard from '../../components/product-card/product-card.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport { selectCategoriesMap, selectCategoriesIsLoading } from '../../store/categories/category.selector';\n\nimport {Title, CategoryContainer} from './category.styles';\n\ntype CategoryRouteParams = {\n    category: string;\n};\n\nconst Category = () => {\n    const { category } = useParams<keyof CategoryRouteParams>() as CategoryRouteParams;    \n    const categoriesMap = useSelector(selectCategoriesMap);\n    const isLoading = useSelector(selectCategoriesIsLoading);\n    const [products, setProducts] = useState(categoriesMap[category]);\n    \n    useEffect(() => {        \n        setProducts(categoriesMap[category]);\n    }, [category, categoriesMap]);\n\n    return (\n        <Fragment>\n            <Title>{category.toUpperCase()}</Title>\n            {\n                isLoading ? (<Spinner />) : \n                (                \n                    <CategoryContainer>\n                        {\n                            products &&\n                            products.map((product) => <ProductCard key={product.id} product={product} />)\n                        }\n                    </CategoryContainer>\n                )\n            }\n        </Fragment>\n    );\n};\n\nexport default Category;","import { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport CategoriesPreview from '../categories-preview/categories-preview.component';\nimport Category from '../category/category.component';\nimport { fetchCategoriesStart } from '../../store/categories/category.action';\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchCategoriesStart());\n    }, []);\n\n    return (\n        <Routes >\n            <Route index element={<CategoriesPreview />} />\n            <Route path=':category' element={<Category />} />\n        </Routes>\n    );\n};\n\nexport default Shop;\n\n\n\n","import { createSelector } from \"reselect\";\n\nimport { RootState } from \"../store\";\n\nimport { CartState } from './cart.reducer';\n\n\nconst selectCartReducer = (state: RootState): CartState => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCartReducer],\n    (cart) => cart.cartItems\n);\n\nexport const selectIsCartOpen = createSelector(\n    [selectCartReducer],\n    (cart) => cart.isCartOpen\n);\n\nexport const selectCartCount = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n);","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["BUTTON_TYPE_CLASSES","children","buttonType","isLoading","otherProps","CustomButton","base","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","selectCategoriesState","state","categories","selectCategoryList","createSelector","categoriesState","categoryList","selectCategoriesMap","Object","fromEntries","map","title","items","toLowerCase","selectCategoriesIsLoading","ProductCardContainer","Footer","Name","Price","product","imageUrl","name","price","dispatch","useDispatch","cartItems","useSelector","selectCartItems","src","alt","onClick","addItemToCart","CategoryPreviewContainer","Title","Link","Preview","products","to","toUpperCase","filter","_","index","id","categoryListMap","Fragment","keys","CategoryContainer","category","useParams","categoriesMap","useState","setProducts","useEffect","fetchCategoriesStart","element","path","selectCartReducer","cart","selectIsCartOpen","isCartOpen","selectCartCount","reduce","total","cartItem","quantity","selectCartTotal","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","assign","lastResult","recomputations","resetRecomputations","_objectWithoutProperties","source","excluded","target","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}